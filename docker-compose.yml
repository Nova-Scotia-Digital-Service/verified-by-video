services:
  web:
    build:
      dockerfile: Dockerfile.web
      target: install
    command: yarn start
    environment:
      NODE_ENV: ${NODE_ENV:-development}
    ports:
      - 3000:3000
    volumes:
      - ./web/src:/app/src

  api:
    build:
      dockerfile: Dockerfile.api
      target: install
    command: yarn start
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PG_PASSWORD: ${PG_PASSWORD}
      PG_HOST: postgres
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_ACCESS_KEY: ${MINIO_SECRET_ACCESS_KEY}
    ports:
      - 3100:3100
    volumes:
      - ./api/src:/app/src

  minio:
    image: minio/minio:latest
    volumes:
      - minio-data:/data
    ports:
      - 9001:9001
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: |
      server
      --address ":9000"
      --console-address ":9001"
      /data
  minio-proxy:
    image: caddy
    ports:
      - 9000:9000
    volumes:
      - ./minio.dev.Caddyfile:/etc/caddy/Caddyfile
      - caddy-data:/data
      - caddy-config:/config

  postgres:
    image: postgres:14
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT_EXPOSED:-5432}:5432
    environment:
      - POSTGRES_DB=verified_by_video
      - POSTGRES_PASSWORD=${PG_PASSWORD}

volumes:
  minio-data:
  postgres-data:
  caddy-data:
  caddy-config:
